"""tests the class basegeometry"""

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("valid number", 1)

#with str
>>> bg.integer_validator("hello", "words")
Traceback (most recent call last):
TypeError: hello  must be an integer

#less than 0
>>> bg.integer_validator("hello", -1)
Traceback (most recent call last):
TypeError: hello  must be greater than 0

# with a boolean
>>> bg.integer_validator("hello", True)
Traceback (most recent call last):
TypeError: hello  must be an integer

# with a list
>>> bg.integer_validator("hello", [2,3])
Traceback (most recent call last):
TypeError: hello  must be an integer

# a dict
>>> bg.integer_validator("hello", {})
Traceback (most recent call last):
TypeError: hello  must be an integer

# with a tuple
>>> bg.integer_validator("hello", (1,2))
Traceback (most recent call last):
TypeError: hello  must be an integer

#with None
>>> bg.integer_validator(None)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

#no arg
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
